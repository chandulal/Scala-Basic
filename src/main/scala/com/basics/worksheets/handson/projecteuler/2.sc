// Euler Problem 2

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
 */

def fibonacci(number: Int) = {

  def loop(previous: Int, current: Int, evenValuedSum: Int): Int = {
    if (current > number) evenValuedSum
    else {
//      println(previous + " " + current)
      if (current % 2 == 0)
        loop(current, previous + current, evenValuedSum + current)
      else
        loop(current, previous + current, evenValuedSum)
    }
  }
  loop(0, 1, 0)
}

//fibonacci
fibonacci(10)